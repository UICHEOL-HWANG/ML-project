{"version":3,"file":"js/app.e673f7a1.js","mappings":"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","sources":["webpack://frontend/./src/App.vue","webpack://frontend/src/App.vue","webpack://frontend/./src/App.vue?c036","webpack://frontend/./src/App.vue?0e40","webpack://frontend/./src/main.js","webpack://frontend/webpack/bootstrap","webpack://frontend/webpack/runtime/chunk loaded","webpack://frontend/webpack/runtime/define property getters","webpack://frontend/webpack/runtime/global","webpack://frontend/webpack/runtime/hasOwnProperty shorthand","webpack://frontend/webpack/runtime/jsonp chunk loading","webpack://frontend/webpack/startup"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"dashboard-container\"},[_vm._m(0),_c('div',{staticClass:\"card_flex\"},[_c('div',{staticClass:\"chart-card\"},[_c('div',{staticClass:\"chart-title\"},[_vm._v(\"연도별 출생률 차트\")]),_c('div',{staticClass:\"chart-container\"},[_c('div',{staticClass:\"line-chart\"},[_c('svg',{ref:\"svg\"})])])]),_vm._m(1),_vm._m(2)]),_c('div',{staticClass:\"card_flex\"},[_c('div',{staticClass:\"chart-card\"},[_c('div',{staticClass:\"chart-title\"},[_vm._v(\"이혼률 차트\")]),_c('div',{staticClass:\"chart-container\"},[_c('div',{staticClass:\"divorce_chart\"},[_c('svg',{ref:\"divorce_svg\"})])])]),_vm._m(3),_vm._m(4)]),_c('div',{staticClass:\"chart-block\"},[_c('div',{staticClass:\"chart-title\"},[_vm._v(\"지역별 출생률 및 사망률\")]),_c('div',{staticClass:\"region_chart\"},[_c('svg',{ref:\"region_bar_chart_svg\"})])]),_c('div',{staticClass:\"chart-block\"},[_c('div',{staticClass:\"chart-title\"},[_vm._v(\"지역별 자연증가율\")]),_c('div',{staticClass:\"natural\"},[_c('svg',{ref:\"natural_svg\"})])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"main\"},[_c('p',[_vm._v(\"인구 감소율 분석 차트\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"chart-card\"},[_c('div',{staticClass:\"font\"},[_c('p',[_vm._v(\"코로나로 인한 최대사망 \")]),_c('dt',{staticClass:\"dt\"},[_vm._v(\"코로나로 인하여 평소 앓던 지병에 합병증으로 사망하는 경우가 많이 발생, 매년 출산율은 감소하나 사망률은 코로나로 인해 폭발적으로 증가하여 인구 감소에 가속화된 경향이 있음 \")])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"chart-card\"},[_c('figure',[_c('img',{attrs:{\"src\":\"https://news.kbs.co.kr/data/news/2023/09/21/20230921_ZbTEeU.jpg\",\"alt\":\"\"}})]),_c('dl',[_c('dd',[_vm._v(\"코로나19가 바꾼 사망 통계…사망자 수 역대 최대\")]),_c('dt',[_c('a',{attrs:{\"href\":\"https://news.kbs.co.kr/news/pc/view/view.do?ncd=7779789\"}},[_vm._v(\"https://news.kbs.co.kr/news/pc/view/view.do?ncd=7779789\")])])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"chart-card\"},[_c('div',{staticClass:\"font\"},[_c('p',[_vm._v(\"늘어나는 딩크족\")]),_c('dt',{staticClass:\"dt\"},[_vm._v(\"늘어나는 결혼률에 비해 현저히 적어지는 출생률 결혼은 선호하나 아이를 낳는 것은 경제 상황상 어렵다는 판단에 결혼은 하되, 아이는 낳지 않는 이른바 \\\"딩크족\\\" 성행\")])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"chart-card\"},[_c('figure',[_c('img',{attrs:{\"src\":\"https://news.koreadaily.com/data/photo/2023/12/18/ebbb2654-3c51-441e-b3c1-720d4f6ed1ba.jpg\",\"alt\":\"\"}})]),_c('dl',[_c('dd',[_vm._v(\"2030 미혼 성인남녀 44%, ‘딩크족’ 생활 꿈꿔\")]),_c('dt',[_c('a',{attrs:{\"href\":\"https://www.dailyenews.co.kr/news/articleView.html?idxno=880\"}},[_vm._v(\"https://www.dailyenews.co.kr/news/articleView.html?idxno=880\")])])])])\n}]\n\nexport { render, staticRenderFns }","<template>\n\n  <div class=\"dashboard-container\">\n\n    <div class=\"main\">\n      <p>인구 감소율 분석 차트</p>\n    </div>\n    <!-- 첫 번째 차트: Line Chart -->\n    <div class=\"card_flex\">\n    <div class=\"chart-card\">\n      <div class=\"chart-title\">연도별 출생률 차트</div>\n      <div class=\"chart-container\">\n        <div class=\"line-chart\">\n          <svg ref=\"svg\"></svg>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"chart-card\">\n      <div class=\"font\">\n      <p>코로나로 인한 최대사망 </p>\n      <dt class=\"dt\">코로나로 인하여 평소 앓던 지병에 합병증으로 사망하는 경우가 많이 발생, 매년  출산율은 감소하나 사망률은 코로나로 인해 폭발적으로 증가하여 인구 감소에 가속화된 경향이 있음 </dt>\n    </div>\n    </div>\n\n    <div class=\"chart-card\">\n      <figure>\n        <img src=\"https://news.kbs.co.kr/data/news/2023/09/21/20230921_ZbTEeU.jpg\" alt=\"\">\n      </figure>\n      <dl>\n        <dd>코로나19가 바꾼 사망 통계…사망자 수 역대 최대</dd>\n        <dt><a href=\"https://news.kbs.co.kr/news/pc/view/view.do?ncd=7779789\">https://news.kbs.co.kr/news/pc/view/view.do?ncd=7779789</a></dt>\n      </dl>\n    </div>\n\n    \n  </div>\n\n    <!-- 두 번째 차트: Divorce Chart -->\n\n    <div class=\"card_flex\">\n    <div class=\"chart-card\">\n      <div class=\"chart-title\">이혼률 차트</div>\n      <div class=\"chart-container\">\n        <div class=\"divorce_chart\">\n          <svg ref=\"divorce_svg\"></svg>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"chart-card\">\n      <div class=\"font\">\n     <p>늘어나는 딩크족</p>\n\n\n        <dt class=\"dt\">늘어나는 결혼률에 비해 현저히 적어지는 출생률 결혼은 선호하나 아이를 낳는 것은 경제 상황상 어렵다는 판단에 결혼은 하되, 아이는 낳지 않는 이른바 \"딩크족\" 성행</dt>\n      </div>\n    </div>\n    \n    \n    <div class=\"chart-card\">\n      <figure>\n        <img src=\"https://news.koreadaily.com/data/photo/2023/12/18/ebbb2654-3c51-441e-b3c1-720d4f6ed1ba.jpg\" alt=\"\">\n      </figure>\n      <dl>\n        <dd>2030 미혼 성인남녀 44%, ‘딩크족’ 생활 꿈꿔</dd>\n        <dt><a href=\"https://www.dailyenews.co.kr/news/articleView.html?idxno=880\">https://www.dailyenews.co.kr/news/articleView.html?idxno=880</a></dt>\n      </dl>\n    </div>\n</div>\n    <!-- 세 번째 차트: Region Bar Chart -->\n    <div class=\"chart-block\">\n      <div class=\"chart-title\">지역별 출생률 및 사망률</div>\n      <div class=\"region_chart\">\n        <svg ref=\"region_bar_chart_svg\"></svg>\n      </div>\n    </div>\n\n    <!-- 네 번째 차트: Natural Increase Chart -->\n    <div class=\"chart-block\">\n      <div class=\"chart-title\">지역별 자연증가율</div>\n      <div class=\"natural\">\n        <svg ref=\"natural_svg\"></svg>\n      </div>\n    </div>\n  </div>\n\n\n\n</template>\n\n<script>\nimport * as d3 from 'd3';\n\nexport default {\n  name: 'LineChart',\n  mounted() {\n    this.fetchData();\n    this.fetchDivorceData();\n    this.fetchRegiondata();\n    this.fetchNatural();\n\n  },\n  methods: {\n    fetchData() {\n      fetch('http://172.30.1.16:8000/groupby_vital')\n        .then(response => response.json())\n        .then(data => {\n          this.drawChart(data);\n        });\n    },\n    fetchDivorceData() {\n      fetch('http://172.30.1.16:8000/groupby_divorce')\n        .then(response => response.json())\n        .then(data => {\n          this.drawDivorceChart(data);\n        })\n        .catch(error => {\n          console.error('Error fetching data:', error);\n        });\n    },\n    fetchRegiondata(){\n      fetch('http://172.30.1.16:8000/region_death')\n        .then(response => response.json())\n        .then(data => {\n          this.drawRegionBarChart(data);\n        })\n        .catch(error => {\n          console.error('Error fetching data:', error);\n        });\n    },\n    fetchNatural(){\n      fetch('http://172.30.1.16:8000/natural_increase_rate')\n        .then(response => response.json())\n        .then(data => {\n          this.drawNaturalIncreaseChart(data);\n        })\n        .catch(error => {\n          console.error('Error fetching data:', error);\n        });\n    },\n    drawChart(data) {\n      const svg = d3.select(this.$refs.svg);\n      const svgWidth = 600, svgHeight = 400;\n      svg.attr('width', svgWidth).attr('height', svgHeight).style('background-color', 'white');\n\n      const margin = { top: 20, right: 20, bottom: 50, left: 50 };\n      const width = svgWidth - margin.left - margin.right;\n      const height = svgHeight - margin.top - margin.bottom;\n\n      const g = svg.append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n      // 데이터 파싱\n      const parseTime = d3.timeParse('%Y-%m-%dT%H:%M:%S');\n      data.forEach(d => {\n        d.date = parseTime(d.date);\n        d.birth_rate = +d.birth_rate;\n        d.death_rate = +d.death_rate;\n      });\n\n      // 축 스케일 설정\n      const x = d3.scaleTime().rangeRound([0, width]);\n      const y = d3.scaleLinear().rangeRound([height, 0]);\n\n      x.domain(d3.extent(data, d => d.date));\n      y.domain([0, d3.max(data, d => Math.max(d.birth_rate, d.death_rate))]);\n\n      // 축 그리기\n      g.append('g')\n        .attr('transform', `translate(0,${height})`)\n        .call(d3.axisBottom(x).tickSizeOuter(0))\n        .selectAll('text')\n        .attr('y', 10)\n        .attr('dy', '0.35em')\n        .attr('text-anchor', 'middle');\n\n      g.append('g')\n        .call(d3.axisLeft(y))\n        .append('text')\n        .attr('fill', '#000')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '0.71em')\n        .attr('text-anchor', 'end')\n        .text('출생률 / 사망률');\n\n      // 그리드 라인 추가\n      g.append('g')\n        .attr('class', 'grid')\n        .attr('transform', `translate(0,${height})`)\n        .call(d3.axisBottom(x).tickSize(-height).tickFormat(''));\n\n      g.append('g')\n        .attr('class', 'grid')\n        .call(d3.axisLeft(y).tickSize(-width).tickFormat(''));\n\n      // 라인 생성 함수\n      const lineBirth = d3.line()\n        .x(d => x(d.date))\n        .y(d => y(d.birth_rate));\n\n      const lineDeath = d3.line()\n        .x(d => x(d.date))\n        .y(d => y(d.death_rate));\n\n      // 출생률 라인 그리기\n      g.append('path')\n        .data([data])\n        .attr('fill', 'none')\n        .attr('stroke', 'steelblue')\n        .attr('stroke-linejoin', 'round')\n        .attr('stroke-linecap', 'round')\n        .attr('stroke-width', 2)\n        .attr('d', lineBirth);\n\n      // 사망률 라인 그리기\n      g.append('path')\n        .data([data])\n        .attr('fill', 'none')\n        .attr('stroke', 'red')\n        .attr('stroke-linejoin', 'round')\n        .attr('stroke-linecap', 'round')\n        .attr('stroke-width', 1.5)\n        .attr('d', lineDeath);\n\n      // 데이터 포인트에 동그라미 마커 추가\n      g.selectAll('.birth-rate-dot')\n        .data(data)\n        .enter().append('circle')\n        .attr('class', 'birth-rate-dot')\n        .attr('cx', d => x(d.date))\n        .attr('cy', d => y(d.birth_rate))\n        .attr('r', 3)\n        .attr('fill', 'steelblue');\n\n      g.selectAll('.death-rate-dot')\n        .data(data)\n        .enter().append('circle')\n        .attr('class', 'death-rate-dot')\n        .attr('cx', d => x(d.date))\n        .attr('cy', d => y(d.death_rate))\n        .attr('r', 3)\n        .attr('fill', 'red');\n\n      // 범례 추가\n      const legend = svg.append('g')\n        .attr('class', 'legend')\n        .attr('transform', `translate(520,35)`);\n\n      legend.append('rect')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('width', 10)\n        .attr('height', 10)\n        .attr('fill', 'steelblue');\n\n      legend.append('text')\n        .attr('x', 15)\n        .attr('y', 8)\n        .text('출생률');\n\n      legend.append('rect')\n        .attr('x', 0)\n        .attr('y', 20)\n        .attr('width', 10)\n        .attr('height', 10)\n        .attr('fill', 'red');\n\n      legend.append('text')\n        .attr('x', 15)\n        .attr('y', 28)\n        .text('사망률');\n\n      // 차트 제목 추가\n      svg.append('text')\n        .attr('x', svgWidth / 2)\n        .attr('y', margin.top / 1.5)\n        .attr('text-anchor', 'middle')\n        .style('font-size', '16px')\n        .text('연도별 출생률과 사망률');\n    },\n    drawDivorceChart(data)  {\n  const divorce_svg = d3.select(this.$refs.divorce_svg);\n  const svgWidth = 600, svgHeight = 400;\n  divorce_svg.attr('width', svgWidth).attr('height', svgHeight).style('background-color', 'white');\n\n  const margin = { top: 20, right: 20, bottom: 50, left: 50 };\n  const width = svgWidth - margin.left - margin.right;\n  const height = svgHeight - margin.top - margin.bottom;\n\n  const g = divorce_svg.append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n  const parseTime = d3.timeParse('%Y-%m-%dT%H:%M:%S');\n  data.forEach(d => {\n    d.date = parseTime(d.date);\n    d.birth_rate = +d.birth_rate;\n    d.divorce_rate = +d.divorce_rate;\n    d.marrige_rate = +d.marrige_rate;\n  });\n\n  const x = d3.scaleTime().rangeRound([0, width]);\n  const y = d3.scaleLinear().rangeRound([height, 0]);\n\n  x.domain(d3.extent(data, d => d.date));\n  y.domain([\n    0,\n    d3.max(data, d => Math.max(d.birth_rate, d.divorce_rate, d.marrige_rate))\n  ]);\n\n  g.append('g')\n    .attr('transform', `translate(0,${height})`)\n    .call(d3.axisBottom(x).tickSizeOuter(0))\n    .selectAll('text')\n    .attr('y', 10)\n    .attr('dy', '0.35em')\n    .attr('text-anchor', 'middle');\n\n  g.append('g')\n    .call(d3.axisLeft(y))\n    .append('text')\n    .attr('fill', '#000')\n    .attr('transform', 'rotate(-90)')\n    .attr('y', 6)\n    .attr('dy', '0.71em')\n    .attr('text-anchor', 'end')\n    .text('비율');\n\n  // 그리드 라인 추가\n  g.append('g')\n    .attr('class', 'grid')\n    .attr('transform', `translate(0,${height})`)\n    .call(d3.axisBottom(x).tickSize(-height).tickFormat(''));\n\n  g.append('g')\n    .attr('class', 'grid')\n    .call(d3.axisLeft(y).tickSize(-width).tickFormat(''));\n\n  const lineBirth = d3.line()\n    .x(d => x(d.date))\n    .y(d => y(d.birth_rate));\n\n  const lineDivorce = d3.line()\n    .x(d => x(d.date))\n    .y(d => y(d.divorce_rate));\n\n  const lineMarriage = d3.line()\n    .x(d => x(d.date))\n    .y(d => y(d.marrige_rate));\n\n  g.append('path')\n    .data([data])\n    .attr('fill', 'none')\n    .attr('stroke', 'steelblue')\n    .attr('stroke-linejoin', 'round')\n    .attr('stroke-linecap', 'round')\n    .attr('stroke-width', 2)\n    .attr('d', lineBirth);\n\n  g.append('path')\n    .data([data])\n    .attr('fill', 'none')\n    .attr('stroke', 'green')\n    .attr('stroke-linejoin', 'round')\n    .attr('stroke-linecap', 'round')\n    .attr('stroke-width', 1.5)\n    .attr('d', lineDivorce);\n\n  g.append('path')\n    .data([data])\n    .attr('fill', 'none')\n    .attr('stroke', 'orange')\n    .attr('stroke-linejoin', 'round')\n    .attr('stroke-linecap', 'round')\n    .attr('stroke-width', 1.5)\n    .attr('d', lineMarriage);\n\n  // 데이터 포인트에 동그라미 마커 추가\n  g.selectAll('.birth-rate-dot')\n    .data(data)\n    .enter().append('circle')\n    .attr('class', 'birth-rate-dot')\n    .attr('cx', d => x(d.date))\n    .attr('cy', d => y(d.birth_rate))\n    .attr('r', 3)\n    .attr('fill', 'steelblue');\n\n  g.selectAll('.divorce-rate-dot')\n    .data(data)\n    .enter().append('circle')\n    .attr('class', 'divorce-rate-dot')\n    .attr('cx', d => x(d.date))\n    .attr('cy', d => y(d.divorce_rate))\n    .attr('r', 3)\n    .attr('fill', 'green');\n\n  g.selectAll('.merrige-rate-dot')\n    .data(data)\n    .enter().append('circle')\n    .attr('class', 'merrige-rate-dot')\n    .attr('cx', d => x(d.date))\n    .attr('cy', d => y(d.marrige_rate))\n    .attr('r', 3)\n    .attr('fill', 'orange');\n\n  // 범례 추가\n  const legend = divorce_svg.append('g')\n    .attr('class', 'legend')\n    .attr('transform', `translate(${margin.left},${margin.top})`);\n\n  legend.append('rect')\n    .attr('x', width - 80)\n    .attr('y', 20)\n    .attr('width', 10)\n    .attr('height', 10)\n    .attr('fill', 'steelblue');\n\n  legend.append('text')\n    .attr('x', width - 65)\n    .attr('y', 28)\n    .text('출생률');\n\n  legend.append('rect')\n    .attr('x', width - 80)\n    .attr('y', 40)\n    .attr('width', 10)\n    .attr('height', 10)\n    .attr('fill', 'green');\n\n  legend.append('text')\n    .attr('x', width - 65)\n    .attr('y', 48)\n    .text('이혼률');\n\n  legend.append('rect')\n    .attr('x', width - 80)\n    .attr('y', 60)\n    .attr('width', 10)\n    .attr('height', 10)\n    .attr('fill', 'orange');\n\n  legend.append('text')\n    .attr('x', width - 65)\n    .attr('y', 68)\n    .text('결혼률');\n\n  // 타이틀 추가\n  divorce_svg.append('text')\n    .attr('x', svgWidth / 2)\n    .attr('y', margin.top / 1.5)\n    .attr('text-anchor', 'middle')\n    .style('font-size', '16px')\n    .text('연도별 출생률, 이혼률, 결혼률');\n},\ndrawRegionBarChart(data) {\n  const svg = d3.select(this.$refs.region_bar_chart_svg);\n  const svgWidth = 2000, svgHeight = 400;\n  svg.attr('width', svgWidth).attr('height', svgHeight).style('background-color', 'white');\n\n  const margin = { top: 20, right: 20, bottom: 50, left: 50 };\n  const width = svgWidth - margin.left - margin.right;\n  const height = svgHeight - margin.top - margin.bottom;\n\n  const g = svg.append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n  const regions = data.map(d => d.region);\n  const birthRates = data.map(d => +d.birth_rate);\n  const deathRates = data.map(d => +d.death_rate);\n\n  const x0 = d3.scaleBand()\n    .domain(regions)\n    .rangeRound([0, width])\n    .paddingInner(0.1);\n\n  const x1 = d3.scaleBand()\n    .domain(['birth_rate', 'death_rate'])\n    .rangeRound([0, x0.bandwidth()])\n    .padding(0.05);\n\n  const y = d3.scaleLinear()\n    .domain([0, d3.max([...birthRates, ...deathRates])]).nice()\n    .rangeRound([height, 0]);\n\n  const xAxis = g => g\n  .attr('transform', `translate(0,${height})`)\n  .call(d3.axisBottom(x0).tickSizeOuter(0))\n  .selectAll('text') // 모든 xticks의 텍스트를 선택합니다.\n  .style('font-size', '9px'); // 글자 크기를 조정합니다.\n\n  const yAxis = g => g\n    .call(d3.axisLeft(y).ticks(null, 's'))\n    .call(g => g.select('.domain').remove());\n\n  // x축 그리드 라인 추가\n  g.append('g')\n    .attr('class', 'grid')\n    .attr('transform', `translate(0,${height})`)\n    .call(d3.axisBottom(x0).tickSize(-height).tickFormat(''));\n\n  // y축 그리드 라인 추가\n  g.append('g')\n    .attr('class', 'grid')\n    .call(d3.axisLeft(y).tickSize(-width).tickFormat(''));\n\n  g.append('g')\n    .selectAll('g')\n    .data(data)\n    .join('g')\n    .attr('transform', d => `translate(${x0(d.region)},0)`)\n    .selectAll('rect')\n    .data(d => ['birth_rate', 'death_rate'].map(key => ({ key, value: d[key] })))\n    .join('rect')\n    .attr('x', d => x1(d.key))\n    .attr('y', d => y(d.value))\n    .attr('width', x1.bandwidth())\n    .attr('height', d => height - y(d.value))\n    .attr('fill', d => d.key === 'birth_rate' ? 'steelblue' : 'red');\n\n  g.append('g')\n    .call(xAxis);\n\n  g.append('g')\n    .call(yAxis);\n\n  // 범례 추가\n  const legend = g.append('g')\n  .attr('class', 'legend')\n  .attr('transform', `translate(${width / 2},360)`); // 높이값 조정\n\nlegend.append('rect')\n  .attr('x', -35)\n  .attr('y', 0)\n  .attr('width', 10)\n  .attr('height', 10)\n  .attr('fill', 'steelblue');\n\nlegend.append('text')\n  .attr('x', -20)\n  .attr('y', 8)\n  .text('Birth Rate');\n\nlegend.append('rect')\n  .attr('x', 80)\n  .attr('y', 0)\n  .attr('width', 10)\n  .attr('height', 10)\n  .attr('fill', 'red');\n\nlegend.append('text')\n  .attr('x', 95)\n  .attr('y', 8)\n  .text('Death Rate');\n\n  // 타이틀 추가\n  svg.append('text')\n    .attr('x', svgWidth / 2)\n    .attr('y', margin.top / 1.5)\n    .attr('text-anchor', 'middle')\n    .style('font-size', '16px')\n    .text('Region별 출생률 및 사망률');\n},\ndrawNaturalIncreaseChart(data) {\n  const svg = d3.select(this.$refs.natural_svg);\n  const svgWidth = 2000, svgHeight = 400;\n  svg.attr('width', svgWidth).attr('height', svgHeight).style('background-color', 'white');\n\n  const margin = { top: 20, right: 20, bottom: 50, left: 50 };\n  const width = svgWidth - margin.left - margin.right;\n  const height = svgHeight - margin.top - margin.bottom;\n\n  const g = svg.append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n  const regions = data.map(d => d.region);\n  const naturalIncreaseRates = data.map(d => +d.natural_increase_rate);\n\n  const x = d3.scaleBand()\n    .domain(regions)\n    .rangeRound([0, width])\n    .paddingInner(0.1);\n\n  const y = d3.scaleLinear()\n    .domain([d3.min(naturalIncreaseRates), d3.max(naturalIncreaseRates)]).nice()\n    .rangeRound([height, 0]);\n\n  const xAxis = g => g\n    .attr('transform', `translate(0,${height})`)\n    .call(d3.axisBottom(x).tickSizeOuter(0))\n    .selectAll('text')\n    .style('font-size', '9px')\n  \n    .attr('dy', '0.35em')\n    .attr('text-anchor', 'end');\n\n  const yAxis = g => g\n    .call(d3.axisLeft(y).ticks(null, 's'))\n    .call(g => g.select('.domain').remove());\n\n  // x축 그리드 라인 추가\n  g.append('g')\n    .attr('class', 'grid')\n    .attr('transform', `translate(0,${height})`)\n    .call(d3.axisBottom(x).tickSize(-height).tickFormat(''));\n\n  // y축 그리드 라인 추가\n  g.append('g')\n    .attr('class', 'grid')\n    .call(d3.axisLeft(y).tickSize(-width).tickFormat(''));\n\n  g.append('g')\n    .selectAll('rect')\n    .data(data)\n    .join('rect')\n    .attr('x', d => x(d.region))\n    .attr('y', d => y(Math.max(0, d.natural_increase_rate)))\n    .attr('width', x.bandwidth())\n    .attr('height', d => Math.abs(y(d.natural_increase_rate) - y(0)))\n    .attr('fill', d => d.natural_increase_rate < 0 ? 'red' : 'steelblue');\n\n  g.append('g')\n    .call(xAxis);\n\n  g.append('g')\n    .call(yAxis);\n\n  // 범례 추가\n  const legend = g.append('g')\n    .attr('class', 'legend')\n    .attr('transform', `translate(${width - 100},20)`);\n\n  legend.append('rect')\n    .attr('x', -40)\n    .attr('y', 0)\n    .attr('width', 10)\n    .attr('height', 10)\n    .attr('fill', 'steelblue');\n\n  legend.append('text')\n    .attr('x', -15)\n    .attr('y', 8)\n    .text('Positive Increase');\n\n  legend.append('rect')\n    .attr('x', -40)\n    .attr('y', 20)\n    .attr('width', 10)\n    .attr('height', 10)\n    .attr('fill', 'red');\n\n  legend.append('text')\n    .attr('x', -15)\n    .attr('y', 28)\n    .text('Negative Increase');\n\n  // 타이틀 추가\n  svg.append('text')\n    .attr('x', svgWidth / 2)\n    .attr('y', margin.top / 1.5)\n    .attr('text-anchor', 'middle')\n    .style('font-size', '16px')\n    .text('Region별 자연증가율');\n\n}\n\n\n\n  }\n};\n</script>\n\n\n<style>\n\n.chart-card {\n  width: 635px; /* 이혼률 차트와 라인 차트의 원하는 너비 */\n  height: 460px; /* 이혼률 차트와 라인 차트의 원하는 높이 */\n  margin: 20px;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08);\n}\n\n.chart-block {\n  width: 2000px; /* 지역별 출생률 및 사망률, 지역별 자연증가율의 원하는 너비 */\n  height: 400px; /* 지역별 출생률 및 사망률, 지역별 자연증가율의 원하는 높이 */\n  margin: 20px;\n  padding: 64px;\n  border-radius: 10px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1), 0 1px 3px rgba(0, 0, 0, 0.08);\n}\n\n.chart-title {\n  font-size: 20px;\n  font-weight: bold;\n  margin-bottom: 10px;\n}\n\n.chart-container, .region_chart, .natural {\n  width: 100%;\n  height: 100%;\n}\n\n.line-chart{\n  display: flex;\n}\n\n.line-chart svg {\n  background-color: #f5f5f5;\n  border: 1px solid #ccc;\n  margin: 0 auto;\n  display: block; /* SVG를 블록 요소로 설정 */\n}\n\n.leftside {\n  margin: 210px auto;\n  display: flex;\n  align-items: center;\n}\n\ndiv {\n  margin: 0 auto;\n}\n\np {\n  text-align: center; /* 가운데 정렬 */\n  font-weight: bold; /* 굵게 */\n  font-size: 50px; /* 폰트 크기 */\n  margin-bottom: 20px; /* 바차트와의 간격 조절 */\n}\n\n.leftside{\n  margin: 210px auto 210px;\n  display: flex;\n  align-items: center;\n}\n\n.divorce_chart svg {\n  background-color: #f5f5f5;\n  border: 1px solid #ccc;\n  display: block;\n}\n\n.region_chart{\n  background-color: #f5f5f5;\n  display: block;\n}\n\n.card_flex{\n  display: flex;\n\n}\n\nfigure{\n  width: 100px;\n}\n\nimg{\n  object-fit: cover;\n  width: 441px;\n}\n\ndl{\n  text-align: center;\n}\n\ndd{\n  font-size: 30px;\n  \n}\n\ndt{\n  margin-top: 30px;\n  font-size: 18px;\n}\n\n.dt{\n  text-align: center;\n\n}\n\n.font{\n  text-align: center;\n  margin: 145px auto;\n}\n</style>\n","import mod from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=0dd9cb6b\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\nimport style0 from \"./App.vue?vue&type=style&index=0&id=0dd9cb6b&prod&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkfrontend\"] = self[\"webpackChunkfrontend\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(608); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["render","_vm","this","_c","_self","staticClass","_m","_v","ref","staticRenderFns","attrs","name","mounted","fetchData","fetchDivorceData","fetchRegiondata","fetchNatural","methods","fetch","then","response","json","data","drawChart","drawDivorceChart","catch","error","console","drawRegionBarChart","drawNaturalIncreaseChart","svg","d3","$refs","svgWidth","svgHeight","attr","style","margin","top","right","bottom","left","width","height","g","append","parseTime","forEach","d","date","birth_rate","death_rate","x","rangeRound","y","domain","Math","max","call","tickSizeOuter","selectAll","text","tickSize","tickFormat","lineBirth","lineDeath","enter","legend","divorce_svg","divorce_rate","marrige_rate","lineDivorce","lineMarriage","region_bar_chart_svg","regions","map","region","birthRates","deathRates","x0","paddingInner","x1","bandwidth","padding","nice","xAxis","yAxis","ticks","select","remove","join","key","value","natural_svg","naturalIncreaseRates","natural_increase_rate","abs","component","Vue","config","productionTip","h","App","$mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","splice","r","definition","o","defineProperty","enumerable","get","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}